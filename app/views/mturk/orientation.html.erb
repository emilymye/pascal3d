<div class="error hide">

  Error: Your browser does not support WebGl - you cannot do this task.<br>
  You can enable WebGL in your browser by following the instructions below.<br>

  <h2>Desktop Browsers</h2>
  <p><span style="font-weight:bold">Internet Explorer</span><br> You need the latest version: IE11. IE9,10 do not support WebGL.<br></p>
  <p><span style="font-weight:bold">Chrome</span><br> 1) Open Google Chrome. (latest version recommended)<br> 2) Type <u>chrome://flags</u> in the address bar.<br> 3) Scroll down to <u>"Disable WebGL"</u> and click "Disable".<br> 4) Relaunch the browser.<br></p>
  <p><span style="font-weight:bold">Safari</span><br> 1) Open Safari.<br> 2) Open [Safari]-[Preferences...] from menubar.<br> 3) Go to the "Advanced" tab.<br> 4) At the bottom, check <u>"Show Develop menu in menu bar"</u> in the checkbox.<br> 5) In the menubar, you can now find [Develop] menu. Select <u>"Enable WebGL"</u>.<br>
  </p>
  <p><span style="font-weight:bold">Firefox</span><br> 1) Open Firefox. (latest version recommended)<br> 2) Type <u>about:config</u> in the address bar.<br> 3) Type <u>"webgl"</u> in the search bar.<br> 4) Enable <u>"webgl.forceenabled"</u>. (Make sure if its value is "true".)<br> 5) Make sure the value of <u>"webgl.disabled"</u> is "false". If not, toggle the value.<br> * You can switch the value between "true" and "false" either by [mouse-double-click] or [mouse-right-button]-[choose toggle].<br></p>

  <h2>Mobile Browsers</h2>
  Firefox mobile for Android supports WebGL natively. However, we do not recommend to use mobile browsers for the task.

</div>


<div class = "container">

  <% if @annotation.nil? %>
    <div class="error">Error- this HIT is invalid. Please disregard.</div>

  <% else %>
    <% mesh = @annotation.mesh %>
    <% cat_pretty = @annotation.category_name.humanize.downcase %>

    <div class="instructions_orientation">
      <h2>Instruction</h2>
      <p>
        Rotate the 3D model (shown in blue) to look like the <span style="font-weight:bold;color:red"><%=cat_pretty%></span> within the red bounding box in the image. Use the buttons below to rotate the 3D model until it has the same orientation as the <%=cat_pretty%>'s in the image.<br><br>In the case where <b>the indicated bounding box is wrong</b> or given <b>3D model looks totally different</b> from the object in the bounding box, click corresponding checkboxes.<br>
      </p>

      <b>Examples: Choosing correct orientation</b><br>
      <div class="table">
        <div class="table-row">
	  <div class="table-cell">
	    category "teapot"<br>
            <img src="http://cvgl.stanford.edu/projects/PASCAL3D_AMT/orientation_instruction/teapot_good_and_bad.png" width="400" align="middle">
	  </div>
	</div>
	<div class="table-row">
	  <div class="table-cell">
	    category "bench"<br>
	    <img src="http://cvgl.stanford.edu/projects/PASCAL3D_AMT/orientation_instruction/bench_good_and_bad.png" width="400">
	  </div>
        </div>
        <div class="table-row">
	  <div class="table-cell">
	    category "eyeglasses"<br>
	    <img src="http://cvgl.stanford.edu/projects/PASCAL3D_AMT/orientation_instruction/eyeglasses_good_and_bad.png" width="400">
	  </div>
	</div>
      </div><!--end table-->
      <br>
      <b>Examples: Checkboxes</b><br>
      <div class="table">
        <div class="table-row">
          <div class="table-cell">
          </div>
        </div>
      </div><!--end table-->
    </div><!--end instruction-->

    <div class = "images_mesh">
      <%= render :partial => "annotated_image", :locals => { :img_file => @annotation.image_file, :annotation => @annotation } %>
      <%= render :partial => "gl_viewer", :locals => { :mesh => mesh, :small => false, :is_mesh => true}%>
    </div>

    <div class = "buttons hide">
      <a id="control_up" class="btn btn-blue" style="margin-bottom:5px; margin-left:57px;">Up</a><br/>
      <a id="control_left" class="btn btn-blue">Left</a>
      <a id="control_down" class="btn btn-blue">Down</a>
      <a id="control_right" class="btn btn-blue">Right</a>
      <a id="control_reset" class="btn btn-grey">Reset</a>
      <form>
        <br>
        The indicated bounding box is <br> 
        <input type="radio" name="bbox_validity" required value="true">correct.<br><!--no problems-->
        <input type="radio" name="bbox_validity" required value="false">wrong.<br><!--problems exist-->
        <br>
        The 3D model is <br>
        <input type="radio" name="mesh_validity" required value="true"/>correct.<br>
        <input type="radio" name="mesh_validity" required value="false"/>wrong.<br>
        <!--<input type="checkbox" name="bbox_bad" value="true">Check if bounding box is wrong.<br>
        <input type="checkbox" name="mesh_bad" value="true">Check if 3D model does not match with the indicated object.<br>-->
        <br>
      </form>
      <% if @preview %>
        <div>Once you begin this task, you will see a button to submit your annotation here.</div>
      <% else %>
        <form id="orientation_form" action="<%=@formurl%>"  method="post">
          <%= hidden_field_tag 'elevation', 0 %>
          <%= hidden_field_tag 'azimuth', 0 %>
          <%= hidden_field_tag 'bbox_validity', "not_chosen"%>
          <%= hidden_field_tag 'mesh_validity', "not_chosen"%>
          <%= hidden_field_tag 'task', "orientation" %>
          <%= hidden_field_tag 'annotation_id', @annotation.id %>
          <%= hidden_field_tag 'assignmentId', @assignmentId %><br/>
          <%= submit_tag 'Submit', :class => "btn btn-green hide" %>
        </form>
      <%end%>
    </div><!--end buttons hide-->

  <% end %>
</div><!--end container-->


<script>
  $(function(){
    if ( !Detector.webgl ){
      $(".error").show();
      $(".container").remove();
      return false;
    }

    var canvasid = $("canvas.viewport").attr("id");
    var objV = new ObjectViewer("<%=mesh%>",canvasid, {
      onLoaded: function() { 
        $(".buttons").show();
        $("#" + canvasid).next().hide();
        $("input[type='submit']").show();

        resetOrientation();
        
        $(document).keydown( function(event){ 
          if (event.which == 37)
            changeAzimuth(1);
          else if (event.which == 38)
            changeElevation(-1);
          else if (event.which == 39)
            changeAzimuth(-1);
          else if (event.which == 40)
            changeElevation(1);
        });

      }
    });

    $("#control_up").click(function(){ changeElevation(-1); });
    $("#control_right").click(function(){ changeAzimuth(-1); });
    $("#control_left").click(function(){ changeAzimuth(1); });
    $("#control_down").click(function(){ changeElevation(1); });
    $("#control_reset").click(function(){ resetOrientation(); });

    $("input[name=bbox_validity]").click(function(){ setBboxValidity(); });
    $("input[name=mesh_validity]").click(function(){ setMeshValidity(); });

    function setBboxValidity(){
      $("input#bbox_validity").val($("input[name=bbox_validity]:checked").val());
      console.log($("input#bbox_validity").val());
    }

    function setMeshValidity(){
      $("input#mesh_validity").val($("input[name=mesh_validity]:checked").val());
      console.log($("input#mesh_validity").val());
    }

    function resetOrientation(){
      $("input#azimuth").val(0.0);
      $("input#elevation").val(0.0);
      objV.setAzimuth(0.0);
      objV.setElevation(0.0);
    }
  
    function changeAzimuth(incr){
      
      var az = parseFloat($("input#azimuth").val());
      az += Math.PI/90 * incr;
      objV.setAzimuth(az);
      $("input#azimuth").val(az);
      console.log($("input#azimuth").val());
    }

    function changeElevation(incr){
      
      var el = parseFloat($("input#elevation").val());
      el += Math.PI/90 * incr;

      $("#control_up").removeAttr("disabled");
      $("#control_down").removeAttr("disabled");

      if (el >= (Math.PI/2 - 0.00001))
        $("#control_up").attr("disabled","true");
      else if (el <= (-Math.PI/2 + 0.00001))
        $("#control_down").attr("disabled","true");
      else {
        objV.setElevation(el);
        $("input#elevation").val(el);

      }
      console.log($("input#elevation").val());
    }
    
    // callback function for user clicking the "submit" button
    $("#orientation_form").submit(function(){
      if (isNaN(parseFloat($("input#azimuth").val())) ||
          isNaN(parseFloat($("input#elevation").val()))) return false;
      if ( ($("input#bbox_validity").val() === "not_chosen") ||
           ($("input#mesh_validity").val() === "not_chosen") ) {
        alert("Please choose answers for all the questions.\nOtherwise, you cannot submit the HIT.");
        return false;
      }

      var keyptVal = JSON.stringify(objV.findVisibleKeypoints());
      $("#orientation_form").append($("<input>").attr("type", "hidden")
                  .attr("name","keypoint_matches")
                  .val(keyptVal));
      return true;
    });
  });
</script>
