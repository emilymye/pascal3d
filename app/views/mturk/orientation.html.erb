<div class="error hide">
  Error: Your browser does not support WebGl - you cannot do this task.
</div>

<div class = "container">
<% if @annotation.nil? %>
<div class="error">Error- this HIT is invalid. Please disregard.</div>
<% else %>  
  <% 
  mesh = @annotation.mesh 
  cat_pretty = @annotation.category_name.humanize.downcase
  %>

  <div class="instructions">
    <h1>Rotate the 3D object to look like the  <%= cat_pretty %> in the image.</h1>
    <p>Use the buttons below to rotate the 3D object until it is the same orientation as the <%= cat_pretty %> in the photo. You can also use the arrow keys to rotate the model.</p>

    <div class = "buttons hide">
      <a id="control_up" class="btn btn-blue" style="margin-bottom:5px; margin-left:57px;">Up</a>
      <br/>
      <a id="control_left" class="btn btn-blue">Left</a>
      <a id="control_down" class="btn btn-blue">Down</a>
      <a id="control_right" class="btn btn-blue">Right</a>
      <a id="control_reset" class="btn btn-grey">Reset</a> 
      <% if @preview %>
        <div>
          Once you begin this task, you will see a button to submit your annotation here.
        </div>
      <% else %>
        <form id="orientation_form" action="<%=@formurl%>"  method="post">
          <%= hidden_field_tag 'elevation', 0 %>
          <%= hidden_field_tag 'azimuth', 0 %>
          <%= hidden_field_tag 'task', "orientation" %>
          <%= hidden_field_tag 'annotation_id', @annotation.id %>
          <%= hidden_field_tag 'assignmentId', @assignmentId %><br/>
          
          <%= submit_tag 'Submit', :class => "btn btn-green hide" %>
        </form>
      <%end%>

    </div>
  </div>

  <div class = "images">
    <%= render :partial => "annotated_image", :locals => { :img_file => @annotation.image_file, :annotation => @annotation } %>
    <%= render :partial => "gl_viewer", :locals => { :mesh => mesh, :small => false }%>
  </div>
<% end %>
</div>


<script>
  $(function(){
    if ( !Detector.webgl ){
      $(".error").show();
      $(".container").remove();
      return false;
    }

    var canvasid = $("canvas.viewport").attr("id");
    var objV = new ObjectViewer("<%=mesh%>",canvasid, {
      onLoaded: function() { 
        $(".buttons").show();
        $("#" + canvasid).next().hide();
        $("input[type='submit']").show();

        $("#control_up").click(function(){ changeElevation(-1); });
        $("#control_right").click(function(){ changeAzimuth(-1); });
        $("#control_left").click(function(){ changeAzimuth(1); });
        $("#control_down").click(function(){ changeElevation(1); });
        $("#control_right").click(function(){ changeAzimuth(-1); });
        $("#control_reset").click(function(){ resetOrientation(); });

        $(document).keydown( function(event){ 
          if (event.which == 37)
            changeAzimuth(1);
          else if (event.which == 38)
            changeElevation(-1);
          else if (event.which == 39)
            changeAzimuth(-1);
          else if (event.which == 40)
            changeElevation(1);
        });

      }
    });

    
    function resetOrientation(){
      $("input#azimuth").val(0.0);
      $("input#elevation").val(0.0);
      objV.setAzimuth(0.0);
      objV.setElevation(0.0);
    }
  
    function changeAzimuth(incr){
      console.log($("input#azimuth").val());

      var az = parseFloat($("input#azimuth").val());
      az += Math.PI/90 * incr;
      objV.setAzimuth(az);
      $("input#azimuth").val(az);
      console.log($("input#azimuth").val());
    }

    function changeElevation(incr){
      var el = parseFloat($("input#elevation").val());
      el += Math.PI/90 * incr;

      $("#control_up").removeAttr("disabled");
      $("#control_down").removeAttr("disabled");

      if (el >= (Math.PI/2 - 0.00001))
        $("#control_up").attr("disabled","true");
      else if (el <= (-Math.PI/2 + 0.00001))
        $("#control_down").attr("disabled","true");
      else {
        objV.setElevation(el);
        $("input#elevation").val(el);

      }
    }

    $("#orientation_form").submit(function(){
      if (isNaN(parseFloat($("input#azimuth").val())) ||
          isNaN(parseFloat($("input#elevation").val()))) return false;
      var keyptVal = JSON.stringify(objV.findVisibleKeypoints());
      $("#orientation_form").append($("<input>").attr("type", "hidden")
                  .attr("name","keypoint_matches")
                  .val(keyptVal));
      return true;
    });
  });
</script>
